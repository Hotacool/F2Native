apply plugin: 'com.android.library'


android {

    compileSdkVersion rootProject.extensions.sdks.CompileSDK
    buildToolsVersion rootProject.extensions.sdks.BuildTool

    defaultConfig {
        minSdkVersion rootProject.extensions.sdks.MinSDK
        targetSdkVersion rootProject.extensions.sdks.TargetSDK
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags "-DTARGET_ALIPAY"
                cFlags "-ffunction-sections -fdata-sections"
                arguments "-DANDROID_STL=c++_shared", '-DTARGET_ALIPAY=1'
            }
        }
        ndk {
            abiFilters = []
            abiFilters.addAll(rootProject.extensions.sdks.ABIs)
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "../../CMakeLists.txt"
        }
    }

    packagingOptions {
        exclude '**/libc++_shared.so'
        exclude '**/**/libc++_shared.so'
    }
}

repositories {
    flatDir {
        dirs '../../third_party/GCanvas/android/gcanvas_library/build/outputs/aar', '../../third_party/AntGraphic'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.alibaba:fastjson:1.2.73'
    implementation (name: 'antg-build-android-debug', ext:'aar')
}
